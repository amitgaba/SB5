PROCEDURE "MT_VIRTUAL_TABLES.DB::VT_Insert" ( IN viewname nvarchar(255), IN schemaname nvarchar(50), IN filter nvarchar(500),
	IN cron nvarchar(50), IN FUNCTIONAL nvarchar(50), IN OUTCOLS nvarchar(255), IN plhold nvarchar(1000), IN schid nvarchar(10) 
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
    AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   declare viewid integer;
   declare variantid integer;
   declare scheduleid integer;
   declare virtualtab nvarchar(255);
   
   select max(id) into viewid from "MT_VIRTUAL_TABLES.DB::DataModel.VIRTUAL_H" where view_name = :viewname;
   if :viewid is null then
   if functional = 'DG' then 
   select "MT_VIRTUAL_TABLES.DB::DG".nextval into viewid from "MT_VIRTUAL_TABLES.DB::Dummy";
   elseif functional = 'SCM' then
   select "MT_VIRTUAL_TABLES.DB::SCM".nextval into viewid from "MT_VIRTUAL_TABLES.DB::Dummy";
   elseif functional = 'SVC' then
   select "MT_VIRTUAL_TABLES.DB::SVC".nextval into viewid from "MT_VIRTUAL_TABLES.DB::Dummy";
   elseif functional = 'SAM' then
   select "MT_VIRTUAL_TABLES.DB::SAM".nextval into viewid from "MT_VIRTUAL_TABLES.DB::Dummy";
   end if;
   select :viewid || '_' || :viewname into virtualtab from "MT_VIRTUAL_TABLES.DB::Dummy";

   insert into "MT_VIRTUAL_TABLES.DB::DataModel.VIRTUAL_H" 
   values(:viewid,:viewname,:schemaname,functional,virtualtab);
   
   insert into "MT_VIRTUAL_TABLES.DB::DataModel.VIRTUAL_I" 
	values(:viewid,1,:cron,:schid,:filter,:outcols, :plhold);	
	

   else 
   select max(item) + 1 into variantid from 	
	"MT_VIRTUAL_TABLES.DB::DataModel.VIRTUAL_I" 
	where id = :viewid;

   insert into "MT_VIRTUAL_TABLES.DB::DataModel.VIRTUAL_I" 
	values(:viewid,variantid,:cron,:schid,:filter,:outcols, :plhold);		 

   end if;   
   
END